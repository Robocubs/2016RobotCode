// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1701.RobotBuild2015.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc1701.RobotBuild2015.Robot;
import org.usfirst.frc1701.RobotBuild2015.RobotMap;

/**
 *
 */
public class  RightXDegree extends Command {

	Timer timer;
	
    public RightXDegree() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    boolean finished = false;
    double WantedimuDegree = RobotMap.imu.getYaw()-2.0;
    
    // Called just before this Command runs the first time
    protected void initialize() {
    	timer = new Timer();
    	timer.start();
    	finished = false;
        WantedimuDegree = RobotMap.imu.getYaw()-2.0;
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	finished = false;
    	if(timer.get() > 3){
    		finished = true;
    	}
    	RobotMap.drivetrainDriveMotorFL.set(-0.2);
		RobotMap.drivetrainDriveMotorFR.set(0.2);
		RobotMap.drivetrainDriveMotorBR.set(0.2);
		RobotMap.drivetrainDriveMotorBL.set(-0.2);
		if(RobotMap.imu.getYaw() <= WantedimuDegree){
			finished = true;
		}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return finished;
    }

    // Called once after isFinished returns true
    protected void end() {
    	RobotMap.drivetrainDriveMotorFL.set(0);
		RobotMap.drivetrainDriveMotorFR.set(0);
		RobotMap.drivetrainDriveMotorBR.set(0);
		RobotMap.drivetrainDriveMotorBL.set(0);
    	timer.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	RobotMap.drivetrainDriveMotorFL.set(0);
		RobotMap.drivetrainDriveMotorFR.set(0);
		RobotMap.drivetrainDriveMotorBR.set(0);
		RobotMap.drivetrainDriveMotorBL.set(0);
		finished = true;
    }
}
