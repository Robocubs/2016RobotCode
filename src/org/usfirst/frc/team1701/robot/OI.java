// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team1701.robot;

import org.usfirst.frc.team1701.robot.commands.AllLights;
import org.usfirst.frc.team1701.robot.commands.BallIn;
import org.usfirst.frc.team1701.robot.commands.BallOut;
import org.usfirst.frc.team1701.robot.commands.Fire;
import org.usfirst.frc.team1701.robot.commands.LoadPosition;
import org.usfirst.frc.team1701.robot.commands.Lower;
import org.usfirst.frc.team1701.robot.commands.OverrideFire;
import org.usfirst.frc.team1701.robot.commands.Raise;
import org.usfirst.frc.team1701.robot.commands.RampShooter;
import org.usfirst.frc.team1701.robot.commands.ShooterIdle;
import org.usfirst.frc.team1701.robot.commands.ToggleShooterLight;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton shooterRamp;
    public JoystickButton shooterLight;
    public JoystickButton shooterIdle;
    public JoystickButton shootButton;
    public JoystickButton OverrideShootButton;
    public JoystickButton Raise;
    public JoystickButton Lower;
    public JoystickButton In;
    public JoystickButton Out;
    public JoystickButton loadPosition;
    public JoystickButton flashToggle;
    public JoystickButton lightToggle;
    public Joystick joy1;
    public Joystick joy2;
    public Joystick uhid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    	joy1 = new Joystick(0);
    	joy2 = new Joystick(1);
        uhid = new Joystick(2);
        
        lightToggle = new JoystickButton (uhid, 7);
        lightToggle.whenPressed(new AllLights());
        
        shootButton = new JoystickButton(uhid, 9);
        shootButton.whenPressed(new Fire());
        OverrideShootButton = new JoystickButton(uhid, 8);
        OverrideShootButton.whenPressed(new OverrideFire());
        shooterRamp = new JoystickButton(uhid, 3);
        shooterRamp.whenPressed(new RampShooter());
        shooterLight = new JoystickButton(uhid, 5);
        shooterLight.whenPressed(new ToggleShooterLight());
        shooterIdle = new JoystickButton(uhid, 4);
        shooterIdle.whenPressed(new ShooterIdle());
        loadPosition = new JoystickButton(uhid, 6);
        loadPosition.whenPressed(new LoadPosition());
        Raise = new JoystickButton(uhid, 11);
        Raise.whenPressed(new Raise());
        Lower = new JoystickButton(uhid, 10);
        Lower.whenPressed(new Lower());
        In = new JoystickButton(uhid, 1);
        In.whenPressed(new BallIn());
        Out = new JoystickButton(uhid, 2);
        Out.whenPressed(new BallOut());
        

        // SmartDashboard Buttons

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

